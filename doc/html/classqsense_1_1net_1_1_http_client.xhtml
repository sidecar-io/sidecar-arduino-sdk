<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>QSense Sidecar Library: qsense::net::HttpClient Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">QSense Sidecar Library
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
   <div id="projectbrief">Developed for QSense</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classqsense_1_1net_1_1_http_client.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classqsense_1_1net_1_1_http_client-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">qsense::net::HttpClient Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>A HTTP Client class for use with either ethernet or wifi. Before use, the client should be initialised with the network type used by the device (<a class="el" href="namespaceqsense_1_1net.xhtml#ad07cee7867c08434996d81e40c8d9486">qsense::net::initNetworkType</a>.  
 <a href="classqsense_1_1net_1_1_http_client.xhtml#details">More...</a></p>

<p><code>#include &lt;QHttpClient.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for qsense::net::HttpClient:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classqsense_1_1net_1_1_http_client__inherit__graph.svg" width="194" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for qsense::net::HttpClient:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classqsense_1_1net_1_1_http_client__coll__graph.svg" width="194" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:adcde155748e7f303446821c697fb7ff1"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classqsense_1_1_auto_ptr.xhtml">AutoPtr</a>&lt; <a class="el" href="classqsense_1_1net_1_1_http_client.xhtml">HttpClient</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#adcde155748e7f303446821c697fb7ff1">Ptr</a></td></tr>
<tr class="memdesc:adcde155748e7f303446821c697fb7ff1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type for auto pointer to a http client instance.  <a href="#adcde155748e7f303446821c697fb7ff1">More...</a><br /></td></tr>
<tr class="separator:adcde155748e7f303446821c697fb7ff1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a55d463748944c6584d2cdab57f824d34"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#a55d463748944c6584d2cdab57f824d34">HttpClient</a> ()</td></tr>
<tr class="memdesc:a55d463748944c6584d2cdab57f824d34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a55d463748944c6584d2cdab57f824d34">More...</a><br /></td></tr>
<tr class="separator:a55d463748944c6584d2cdab57f824d34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5a830119a714427d782afcb7614f4c1"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#ad5a830119a714427d782afcb7614f4c1">~HttpClient</a> ()</td></tr>
<tr class="memdesc:ad5a830119a714427d782afcb7614f4c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor for sub-classes.  <a href="#ad5a830119a714427d782afcb7614f4c1">More...</a><br /></td></tr>
<tr class="separator:ad5a830119a714427d782afcb7614f4c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7283096c6c4b8a3d1b47688aeddade37"><td class="memItemLeft" align="right" valign="top">virtual int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#a7283096c6c4b8a3d1b47688aeddade37">connect</a> (const <a class="el" href="namespaceqsense.xhtml#a855c750fcac449e35e151d31e1763280">qsense::QString</a> &amp;server, uint16_t port=80)=0</td></tr>
<tr class="memdesc:a7283096c6c4b8a3d1b47688aeddade37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make a socket connection to the specified server on specified port (default 80)  <a href="#a7283096c6c4b8a3d1b47688aeddade37">More...</a><br /></td></tr>
<tr class="separator:a7283096c6c4b8a3d1b47688aeddade37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a325f3e6f2c4eeaf047dfe90b68526783"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#a325f3e6f2c4eeaf047dfe90b68526783">connected</a> ()=0</td></tr>
<tr class="memdesc:a325f3e6f2c4eeaf047dfe90b68526783"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check to see if the client is connected to the server.  <a href="#a325f3e6f2c4eeaf047dfe90b68526783">More...</a><br /></td></tr>
<tr class="separator:a325f3e6f2c4eeaf047dfe90b68526783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45582e75ec9d96a8744564ce845822e4"><td class="memItemLeft" align="right" valign="top">virtual uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#a45582e75ec9d96a8744564ce845822e4">get</a> (const <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml">HttpRequest</a> &amp;request)=0</td></tr>
<tr class="memdesc:a45582e75ec9d96a8744564ce845822e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a GET request using information in the request object.  <a href="#a45582e75ec9d96a8744564ce845822e4">More...</a><br /></td></tr>
<tr class="separator:a45582e75ec9d96a8744564ce845822e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1c89e77ecfae17150b9b9779ec43c33"><td class="memItemLeft" align="right" valign="top">virtual uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#ab1c89e77ecfae17150b9b9779ec43c33">post</a> (const <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml">HttpRequest</a> &amp;request)=0</td></tr>
<tr class="memdesc:ab1c89e77ecfae17150b9b9779ec43c33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a POST request using information in the request object.  <a href="#ab1c89e77ecfae17150b9b9779ec43c33">More...</a><br /></td></tr>
<tr class="separator:ab1c89e77ecfae17150b9b9779ec43c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab354499b59ad131d6f9df6f9c46e8c34"><td class="memItemLeft" align="right" valign="top">virtual uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#ab354499b59ad131d6f9df6f9c46e8c34">remove</a> (const <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml">HttpRequest</a> &amp;request)=0</td></tr>
<tr class="memdesc:ab354499b59ad131d6f9df6f9c46e8c34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a DELETE request using information in the request object. Named remove to get around delete being keyword.  <a href="#ab354499b59ad131d6f9df6f9c46e8c34">More...</a><br /></td></tr>
<tr class="separator:ab354499b59ad131d6f9df6f9c46e8c34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cd6284ff17299c29fc9f29a77e1fc25"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceqsense.xhtml#a855c750fcac449e35e151d31e1763280">qsense::QString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#a3cd6284ff17299c29fc9f29a77e1fc25">readLine</a> ()=0</td></tr>
<tr class="memdesc:a3cd6284ff17299c29fc9f29a77e1fc25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a line from the HTTP response.  <a href="#a3cd6284ff17299c29fc9f29a77e1fc25">More...</a><br /></td></tr>
<tr class="separator:a3cd6284ff17299c29fc9f29a77e1fc25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe8117880ff47165cbc34945f5cf10b3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml#aa6b99db7f380c02c5066362cbd9208a1">HttpRequest::Map</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#abe8117880ff47165cbc34945f5cf10b3">readHeaders</a> ()=0</td></tr>
<tr class="memdesc:abe8117880ff47165cbc34945f5cf10b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a map of the HTTP response headers.  <a href="#abe8117880ff47165cbc34945f5cf10b3">More...</a><br /></td></tr>
<tr class="separator:abe8117880ff47165cbc34945f5cf10b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a342739943056567117ff486acdcb9132"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceqsense.xhtml#a855c750fcac449e35e151d31e1763280">qsense::QString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#a342739943056567117ff486acdcb9132">readBody</a> ()=0</td></tr>
<tr class="memdesc:a342739943056567117ff486acdcb9132"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read the entire contents of the server response body. Note: This method also reads headers. If headers have already been read, it may end up losing some of the response body.  <a href="#a342739943056567117ff486acdcb9132">More...</a><br /></td></tr>
<tr class="separator:a342739943056567117ff486acdcb9132"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classqsense_1_1_ref_counted_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classqsense_1_1_ref_counted_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classqsense_1_1_ref_counted_object.xhtml">qsense::RefCountedObject</a></td></tr>
<tr class="memitem:a1d832736fba012cbd6fd55df0c62a777 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1_ref_counted_object.xhtml#a1d832736fba012cbd6fd55df0c62a777">RefCountedObject</a> ()</td></tr>
<tr class="memdesc:a1d832736fba012cbd6fd55df0c62a777 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates the <a class="el" href="classqsense_1_1_ref_counted_object.xhtml" title="A base class for objects that employ reference counting based garbage collection. ...">RefCountedObject</a>. The initial reference count is one.  <a href="#a1d832736fba012cbd6fd55df0c62a777">More...</a><br /></td></tr>
<tr class="separator:a1d832736fba012cbd6fd55df0c62a777 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46c30e555b946c73afc675a068bb516f inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1_ref_counted_object.xhtml#a46c30e555b946c73afc675a068bb516f">duplicate</a> () const </td></tr>
<tr class="memdesc:a46c30e555b946c73afc675a068bb516f inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments the object's reference count.  <a href="#a46c30e555b946c73afc675a068bb516f">More...</a><br /></td></tr>
<tr class="separator:a46c30e555b946c73afc675a068bb516f inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dd8ac2c89d0f5969948a19d636494a1 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1_ref_counted_object.xhtml#a6dd8ac2c89d0f5969948a19d636494a1">release</a> () const </td></tr>
<tr class="memdesc:a6dd8ac2c89d0f5969948a19d636494a1 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements the object's reference count and deletes the object if the count reaches zero.  <a href="#a6dd8ac2c89d0f5969948a19d636494a1">More...</a><br /></td></tr>
<tr class="separator:a6dd8ac2c89d0f5969948a19d636494a1 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf642a022a5b47cc5b26974ed1e37e7 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1_ref_counted_object.xhtml#a3bf642a022a5b47cc5b26974ed1e37e7">referenceCount</a> () const </td></tr>
<tr class="memdesc:a3bf642a022a5b47cc5b26974ed1e37e7 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reference count.  <a href="#a3bf642a022a5b47cc5b26974ed1e37e7">More...</a><br /></td></tr>
<tr class="separator:a3bf642a022a5b47cc5b26974ed1e37e7 inherit pub_methods_classqsense_1_1_ref_counted_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a19338fb4dbdbd4820eff3a34adba6feb"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#adcde155748e7f303446821c697fb7ff1">Ptr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#a19338fb4dbdbd4820eff3a34adba6feb">create</a> ()</td></tr>
<tr class="memdesc:a19338fb4dbdbd4820eff3a34adba6feb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Factory method for creating concrete instances based on initialisation.  <a href="#a19338fb4dbdbd4820eff3a34adba6feb">More...</a><br /></td></tr>
<tr class="separator:a19338fb4dbdbd4820eff3a34adba6feb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:abc465bcf878fa03ed8302f19772ad18f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#abc465bcf878fa03ed8302f19772ad18f">writeHeaders</a> (const <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml">HttpRequest</a> &amp;request, bool close=true)=0</td></tr>
<tr class="memdesc:abc465bcf878fa03ed8302f19772ad18f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send the specified request headers to the HTTP server.  <a href="#abc465bcf878fa03ed8302f19772ad18f">More...</a><br /></td></tr>
<tr class="separator:abc465bcf878fa03ed8302f19772ad18f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classqsense_1_1_ref_counted_object"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classqsense_1_1_ref_counted_object')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classqsense_1_1_ref_counted_object.xhtml">qsense::RefCountedObject</a></td></tr>
<tr class="memitem:a4a5d56f8025acc438783ee07a982eb52 inherit pro_methods_classqsense_1_1_ref_counted_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classqsense_1_1_ref_counted_object.xhtml#a4a5d56f8025acc438783ee07a982eb52">~RefCountedObject</a> ()</td></tr>
<tr class="memdesc:a4a5d56f8025acc438783ee07a982eb52 inherit pro_methods_classqsense_1_1_ref_counted_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the <a class="el" href="classqsense_1_1_ref_counted_object.xhtml" title="A base class for objects that employ reference counting based garbage collection. ...">RefCountedObject</a>.  <a href="#a4a5d56f8025acc438783ee07a982eb52">More...</a><br /></td></tr>
<tr class="separator:a4a5d56f8025acc438783ee07a982eb52 inherit pro_methods_classqsense_1_1_ref_counted_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A HTTP Client class for use with either ethernet or wifi. Before use, the client should be initialised with the network type used by the device (<a class="el" href="namespaceqsense_1_1net.xhtml#ad07cee7867c08434996d81e40c8d9486">qsense::net::initNetworkType</a>. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="adcde155748e7f303446821c697fb7ff1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classqsense_1_1_auto_ptr.xhtml">AutoPtr</a>&lt;<a class="el" href="classqsense_1_1net_1_1_http_client.xhtml">HttpClient</a>&gt; <a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#adcde155748e7f303446821c697fb7ff1">qsense::net::HttpClient::Ptr</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type for auto pointer to a http client instance. </p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a55d463748944c6584d2cdab57f824d34"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">qsense::net::HttpClient::HttpClient </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="ad5a830119a714427d782afcb7614f4c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual qsense::net::HttpClient::~HttpClient </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor for sub-classes. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7283096c6c4b8a3d1b47688aeddade37"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int16_t qsense::net::HttpClient::connect </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceqsense.xhtml#a855c750fcac449e35e151d31e1763280">qsense::QString</a> &amp;&#160;</td>
          <td class="paramname"><em>server</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>port</em> = <code>80</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Make a socket connection to the specified server on specified port (default 80) </p>

</div>
</div>
<a class="anchor" id="a325f3e6f2c4eeaf047dfe90b68526783"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool qsense::net::HttpClient::connected </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check to see if the client is connected to the server. </p>

</div>
</div>
<a class="anchor" id="a19338fb4dbdbd4820eff3a34adba6feb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classqsense_1_1net_1_1_http_client.xhtml#adcde155748e7f303446821c697fb7ff1">Ptr</a> qsense::net::HttpClient::create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Factory method for creating concrete instances based on initialisation. </p>
<dl class="section return"><dt>Returns</dt><dd>An instance that uses either ethernet or wifi to connect to the network. Callers must delete the returned instance. </dd></dl>

</div>
</div>
<a class="anchor" id="a45582e75ec9d96a8744564ce845822e4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint16_t qsense::net::HttpClient::get </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml">HttpRequest</a> &amp;&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Perform a GET request using information in the request object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>The request object that encapsulates the uri and other relevant information </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The HTTP response code from server. </dd></dl>

</div>
</div>
<a class="anchor" id="ab1c89e77ecfae17150b9b9779ec43c33"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint16_t qsense::net::HttpClient::post </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml">HttpRequest</a> &amp;&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Perform a POST request using information in the request object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>The request object that encapsulates the uri and other relevant information </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The HTTP response code from server. </dd></dl>

</div>
</div>
<a class="anchor" id="a342739943056567117ff486acdcb9132"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceqsense.xhtml#a855c750fcac449e35e151d31e1763280">qsense::QString</a> qsense::net::HttpClient::readBody </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read the entire contents of the server response body. Note: This method also reads headers. If headers have already been read, it may end up losing some of the response body. </p>
<p>WARNING: Use with caution. Can run embedded devices out of memory very easily.</p>
<dl class="section return"><dt>Returns</dt><dd>The entire http response body content. </dd></dl>

</div>
</div>
<a class="anchor" id="abe8117880ff47165cbc34945f5cf10b3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml#aa6b99db7f380c02c5066362cbd9208a1">HttpRequest::Map</a> qsense::net::HttpClient::readHeaders </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return a map of the HTTP response headers. </p>

</div>
</div>
<a class="anchor" id="a3cd6284ff17299c29fc9f29a77e1fc25"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceqsense.xhtml#a855c750fcac449e35e151d31e1763280">qsense::QString</a> qsense::net::HttpClient::readLine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read a line from the HTTP response. </p>
<p>A line can be either a header or content. Use to process raw HTTP response line by line. </p><dl class="section return"><dt>Returns</dt><dd>A line (content until newline character) of text from raw response. </dd></dl>

</div>
</div>
<a class="anchor" id="ab354499b59ad131d6f9df6f9c46e8c34"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint16_t qsense::net::HttpClient::remove </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml">HttpRequest</a> &amp;&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Perform a DELETE request using information in the request object. Named remove to get around delete being keyword. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>The request object that encapsulates the uri and other relevant information </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The HTTP response code from server. </dd></dl>

</div>
</div>
<a class="anchor" id="abc465bcf878fa03ed8302f19772ad18f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void qsense::net::HttpClient::writeHeaders </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classqsense_1_1net_1_1_http_request.xhtml">HttpRequest</a> &amp;&#160;</td>
          <td class="paramname"><em>request</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>close</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Send the specified request headers to the HTTP server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">headers</td><td>The map of headers to send to the server. </td></tr>
    <tr><td class="paramname">close</td><td>Flag indicating whether HTTP keep-alive is NOT to be used. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/Users/rakesh/svn/customer/qsense/desktop/src/api/net/<a class="el" href="_q_http_client_8h.xhtml">QHttpClient.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceqsense.xhtml">qsense</a></li><li class="navelem"><a class="el" href="namespaceqsense_1_1net.xhtml">net</a></li><li class="navelem"><a class="el" href="classqsense_1_1net_1_1_http_client.xhtml">HttpClient</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 19:30:35 for QSense Sidecar Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.9.1 </li>
  </ul>
</div>
</body>
</html>
